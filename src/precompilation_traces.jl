precompile(Tuple{Type{GeometryExperiments.Translation{Dim, T} where T where Dim}, Float64, Vararg{Float64}})
precompile(Tuple{Type{GeometryExperiments.Translation{Dim, T} where T where Dim}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{typeof(Base.inv), GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{typeof(Base.:(∘)), GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{typeof(Base.:(==)), GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{GeometryExperiments.Translation{2, Float64}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{typeof(Base.identity), Type{GeometryExperiments.Translation{2, Float64}}})
precompile(Tuple{Type{GeometryExperiments.Scaling{Dim, T} where T where Dim}, Float64, Vararg{Float64}})
precompile(Tuple{Type{GeometryExperiments.Scaling{Dim, T} where T where Dim}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{typeof(Base.inv), GeometryExperiments.Scaling{2, Float64}})
precompile(Tuple{typeof(Base.:(∘)), GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Scaling{2, Float64}})
precompile(Tuple{typeof(Base.:(==)), GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Scaling{2, Float64}})
precompile(Tuple{GeometryExperiments.Scaling{2, Float64}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{typeof(Base.identity), Type{GeometryExperiments.Scaling{2, Float64}}})
precompile(Tuple{Type{GeometryExperiments.UniformScaling{T} where T}, Float64})
precompile(Tuple{typeof(Base.inv), GeometryExperiments.UniformScaling{Float64}})
precompile(Tuple{typeof(Base.:(∘)), GeometryExperiments.UniformScaling{Float64}, GeometryExperiments.UniformScaling{Float64}})
precompile(Tuple{typeof(Base.:(==)), GeometryExperiments.UniformScaling{Float64}, GeometryExperiments.UniformScaling{Float64}})
precompile(Tuple{GeometryExperiments.UniformScaling{Float64}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{typeof(Base.identity), Type{GeometryExperiments.UniformScaling{Float64}}})
precompile(Tuple{typeof(Base.vect), GeometryExperiments.Translation{2, Float64}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}, Vararg{Any}})
precompile(Tuple{typeof(Base.promote_typeof), GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{typeof(Base.promote_type), Type{GeometryExperiments.Translation{2, Float64}}, Type{GeometryExperiments.Transform}})
precompile(Tuple{typeof(Base.getindex), Type{GeometryExperiments.Transform}, GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{typeof(Base.:(∘)), GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{typeof(GeometryExperiments.transforms), GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.:(==)), AbstractTrees.Leaves{GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}}, Array{GeometryExperiments.Transform, 1}})
precompile(Tuple{Base.var"##_#103", Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, Base.ComposedFunction{Base.ComposedFunction{Type{AbstractTrees.LeavesState{T} where T<:(AbstractTrees.TreeCursor{N, P} where P where N)}, typeof(AbstractTrees.descendleft)}, Type{AbstractTrees.TreeCursor{N, P} where P where N}}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}})
precompile(Tuple{typeof(Base.call_composed), Tuple{Base.Constructor{AbstractTrees.LeavesState{T} where T<:(AbstractTrees.TreeCursor{N, P} where P where N)}, typeof(AbstractTrees.descendleft), Base.Constructor{AbstractTrees.TreeCursor{N, P} where P where N}}, Tuple{GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}}, Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}})
precompile(Tuple{typeof(AbstractTrees.descendleft), AbstractTrees.ImplicitCursor{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Any}})
precompile(Tuple{typeof(Base.iterate), AbstractTrees.Leaves{GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}}, AbstractTrees.LeavesState{AbstractTrees.ImplicitCursor{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, Any}}})
precompile(Tuple{typeof(AbstractTrees.nextsibling), AbstractTrees.ImplicitCursor{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, Any}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{GeometryExperiments.Scaling{2, Float64}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{GeometryExperiments.Scaling{2, Float64}, Int64}, Int64, Int64})
precompile(Tuple{typeof(AbstractTrees.children), GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}})
precompile(Tuple{Type{AbstractTrees.ImplicitCursor{N, P, S} where S where P where N}, AbstractTrees.ImplicitCursor{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Any}, GeometryExperiments.Scaling{2, Float64}, Nothing})
precompile(Tuple{typeof(AbstractTrees.descendleft), AbstractTrees.ImplicitCursor{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, Any}})
precompile(Tuple{Type{AbstractTrees.LeavesState{T} where T<:(AbstractTrees.TreeCursor{N, P} where P where N)}, AbstractTrees.ImplicitCursor{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, Any}})
precompile(Tuple{typeof(Base.empty), Array{Any, 1}, Type{GeometryExperiments.Translation{2, Float64}}})
precompile(Tuple{typeof(Base.push!), Array{GeometryExperiments.Translation{2, Float64}, 1}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{typeof(Base.grow_to!), Array{GeometryExperiments.Translation{2, Float64}, 1}, AbstractTrees.Leaves{GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}}, AbstractTrees.LeavesState{AbstractTrees.ImplicitCursor{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, Any}}})
precompile(Tuple{typeof(AbstractTrees.nextsibling), AbstractTrees.ImplicitCursor{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, Any}})
precompile(Tuple{typeof(AbstractTrees.nextsibling), AbstractTrees.ImplicitCursor{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Any}})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{GeometryExperiments.Translation{2, Float64}, Int64}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{GeometryExperiments.Translation{2, Float64}, Int64}, Int64, Int64})
precompile(Tuple{typeof(AbstractTrees.children), GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}})
precompile(Tuple{Type{AbstractTrees.ImplicitCursor{N, P, S} where S where P where N}, AbstractTrees.ImplicitCursor{GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Nothing, Any}, GeometryExperiments.Translation{2, Float64}, Nothing})
precompile(Tuple{typeof(AbstractTrees.descendleft), AbstractTrees.ImplicitCursor{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Any}})
precompile(Tuple{Type{AbstractTrees.LeavesState{T} where T<:(AbstractTrees.TreeCursor{N, P} where P where N)}, AbstractTrees.ImplicitCursor{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Any}})
precompile(Tuple{typeof(Base.grow_to!), Array{GeometryExperiments.Transform, 1}, AbstractTrees.Leaves{GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}}, AbstractTrees.LeavesState{AbstractTrees.ImplicitCursor{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Any}}})
precompile(Tuple{typeof(AbstractTrees.nextsibling), AbstractTrees.ImplicitCursor{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}}, Any}})
precompile(Tuple{Type{Base.Broadcast.Broadcasted{Style, Axes, F, Args} where Args<:Tuple where F where Axes where Style<:Union{Nothing, Base.Broadcast.BroadcastStyle}}, Base.Broadcast.DefaultArrayStyle{1}, typeof(Base.:(==)), Tuple{Array{GeometryExperiments.Transform, 1}, Array{GeometryExperiments.Transform, 1}}})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.:(==)), Tuple{Array{GeometryExperiments.Transform, 1}, Array{GeometryExperiments.Transform, 1}}}})
precompile(Tuple{typeof(Base.:(∘)), GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{GeometryExperiments.ComposedTransform{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{typeof(Base.inv), GeometryExperiments.ComposedTransform{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}}})
precompile(Tuple{typeof(Base.:(∘)), GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.ComposedTransform{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}}})
precompile(Tuple{GeometryExperiments.ComposedTransform{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.ComposedTransform{GeometryExperiments.Scaling{2, Float64}, GeometryExperiments.Translation{2, Float64}}}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{Type{GeometryExperiments.NormedPrimitive{inf, T} where T}, Float64})
precompile(Tuple{typeof(GeometryExperiments.origin), GeometryExperiments.NormedPrimitive{inf, Float64}})
precompile(Tuple{typeof(GeometryExperiments.radius), GeometryExperiments.NormedPrimitive{inf, Float64}})
precompile(Tuple{typeof(Base.:(∉)), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.NormedPrimitive{inf, Float64}})
precompile(Tuple{typeof(Base.in), Float64, GeometryExperiments.NormedPrimitive{inf, Float64}})
precompile(Tuple{Type{GeometryExperiments.Scaling{Dim, T} where T where Dim}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{Type{GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, T}, GeometryExperiments.Scaling{Dim, T}} where T where Dim}, Float64, GeometryExperiments.Scaling{3, Float64}})
precompile(Tuple{Type{GeometryExperiments.Transformed{O, GeometryExperiments.Scaling{Dim, T}} where T where Dim where O}, GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{3, Float64}})
precompile(Tuple{Type{GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, T}, GeometryExperiments.Scaling{Dim, T}} where T where Dim}, GeometryExperiments.Scaling{3, Float64}})
precompile(Tuple{typeof(GeometryExperiments.origin), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{3, Float64}}})
precompile(Tuple{typeof(GeometryExperiments.radius), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{3, Float64}}})
precompile(Tuple{Type{GeometryExperiments.Translation{Dim, T} where T where Dim}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{Type{GeometryExperiments.Transformed{O, GeometryExperiments.Translation{Dim, T}} where T where Dim where O}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{3, Float64}}, GeometryExperiments.Translation{3, Float64}})
precompile(Tuple{typeof(GeometryExperiments.box), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{typeof(GeometryExperiments.origin), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.Scaling{3, Float64}}}})
precompile(Tuple{typeof(GeometryExperiments.radius), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.Scaling{3, Float64}}}})
precompile(Tuple{Type{GeometryExperiments.Transformed{O, GeometryExperiments.Translation{Dim, T}} where T where Dim where O}, GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Translation{3, Float64}})
precompile(Tuple{GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Translation{3, Float64}}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{Type{GeometryExperiments.Transformed{O, GeometryExperiments.Scaling{Dim, T}} where T where Dim where O}, GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{2, Float64}})
precompile(Tuple{typeof(GeometryExperiments.origin), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{2, Float64}}})
precompile(Tuple{typeof(GeometryExperiments.radius), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{2, Float64}}})
precompile(Tuple{Type{GeometryExperiments.Transformed{O, GeometryExperiments.Translation{Dim, T}} where T where Dim where O}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Scaling{2, Float64}}, GeometryExperiments.Translation{2, Float64}})
precompile(Tuple{typeof(GeometryExperiments.origin), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}}})
precompile(Tuple{typeof(GeometryExperiments.radius), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{2, Float64}, GeometryExperiments.Scaling{2, Float64}}}})
precompile(Tuple{Type{GeometryExperiments.NormedPrimitive{2, T} where T}, Float64})
precompile(Tuple{typeof(Base.:(∉)), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.NormedPrimitive{2, Float64}})
precompile(Tuple{typeof(Base.in), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.NormedPrimitive{2, Float64}})
precompile(Tuple{Type{GeometryExperiments.Transformed{O, GeometryExperiments.Translation{Dim, T}} where T where Dim where O}, GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Translation{3, Float64}})
precompile(Tuple{GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Translation{3, Float64}}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{GeometryExperiments.NormedPrimitive{2, Float64}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{typeof(Base.in), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Translation{3, Float64}}})
precompile(Tuple{Type{GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, T}, GeometryExperiments.Scaling{Dim, T}} where T where Dim}, Float64, GeometryExperiments.Scaling{3, Float64}})
precompile(Tuple{Type{GeometryExperiments.Transformed{O, GeometryExperiments.Scaling{Dim, T}} where T where Dim where O}, GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Scaling{3, Float64}})
precompile(Tuple{Type{GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, T}, GeometryExperiments.Scaling{Dim, T}} where T where Dim}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{typeof(Base.isapprox), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Scaling{3, Float64}}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Scaling{3, Float64}}})
precompile(Tuple{typeof(Base.:(∉)), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Scaling{3, Float64}}})
precompile(Tuple{typeof(GeometryExperiments.origin), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Scaling{3, Float64}}})
precompile(Tuple{typeof(Base.in), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{2, Float64}, GeometryExperiments.Scaling{3, Float64}}})
precompile(Tuple{Type{GeometryExperiments.BoxTransform{F, T} where T where F}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Translation{3, Float64}}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.Scaling{3, Float64}}}})
precompile(Tuple{typeof(GeometryExperiments.origin), GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Translation{3, Float64}}})
precompile(Tuple{typeof(Base.in), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Translation{3, Float64}}})
precompile(Tuple{GeometryExperiments.BoxTransform{GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Translation{3, Float64}}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.Scaling{3, Float64}}}}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{typeof(Base.in), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.Scaling{3, Float64}}}})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.Translation{3, Float64}}, Type})
precompile(Tuple{GeometryExperiments.var"##s40#13", Vararg{Any, 5}})
precompile(Tuple{typeof(Base.ntuple), GeometryExperiments.var"#14#15", Int64})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, StaticArraysCore.SArray{Tuple{8}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1, 8}})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, Type{GeometryExperiments.NormedPrimitive{inf, Float64}}, Type{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}}})
precompile(Tuple{GeometryExperiments.UniformScaling{Float64}, GeometryExperiments.PointSet{3, Float64, StaticArraysCore.SArray{Tuple{8}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1, 8}}})
precompile(Tuple{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, GeometryExperiments.Transformed{GeometryExperiments.NormedPrimitive{inf, Float64}, GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.Scaling{3, Float64}}}, Type})
precompile(Tuple{GeometryExperiments.ComposedTransform{GeometryExperiments.Translation{3, Float64}, GeometryExperiments.Scaling{3, Float64}}, GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}})
precompile(Tuple{typeof(Base.Iterators.zip), GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}, Vararg{GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}}})
precompile(Tuple{Type{Base.Iterators.Zip{Is} where Is<:Tuple}, Tuple{GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}, GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}, GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}}}})
precompile(Tuple{typeof(Base.iterate), Base.Iterators.Zip{Tuple{GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}, GeometryExperiments.PointSet{3, Float64, Array{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 1}}}}, Tuple{Int64, Int64}})
precompile(Tuple{GeometryExperiments.NormedPrimitive{2, Float64}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{Type{GeometryExperiments.Projection{2, O} where O}, GeometryExperiments.NormedPrimitive{2, Float64}})
precompile(Tuple{typeof(Base.in), StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, GeometryExperiments.Projection{2, GeometryExperiments.NormedPrimitive{2, Float64}}})
precompile(Tuple{typeof(Base.:(∉)), StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, GeometryExperiments.Projection{2, GeometryExperiments.NormedPrimitive{2, Float64}}})
precompile(Tuple{typeof(Base.:(∉)), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.Projection{2, GeometryExperiments.NormedPrimitive{2, Float64}}})
precompile(Tuple{typeof(Base.in), StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, GeometryExperiments.Projection{2, GeometryExperiments.NormedPrimitive{2, Float64}}})
precompile(Tuple{GeometryExperiments.Projection{2, GeometryExperiments.NormedPrimitive{2, Float64}}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{Type{GeometryExperiments.NormedPrimitive{2, Float64}}, Float64})
precompile(Tuple{GeometryExperiments.Projection{2, GeometryExperiments.NormedPrimitive{2, Float64}}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
precompile(Tuple{typeof(Base.getproperty), GeometryExperiments.NormedPrimitive{2, Float64}, Symbol})
precompile(Tuple{GeometryExperiments.Projection{2, GeometryExperiments.NormedPrimitive{2, Float64}}, StaticArraysCore.SArray{Tuple{4}, Float64, 1, 4}})
precompile(Tuple{Type{GeometryExperiments.BezierCurve{M} where M<:GeometryExperiments.BezierEvalMethod}})
precompile(Tuple{GeometryExperiments.BezierCurve{GeometryExperiments.Horner}, Float64, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}})
precompile(Tuple{Type{GeometryExperiments.Patch{C} where C<:GeometryExperiments.Curve}, GeometryExperiments.BezierCurve{GeometryExperiments.Horner}, Int64})
precompile(Tuple{GeometryExperiments.Patch{GeometryExperiments.BezierCurve{GeometryExperiments.Horner}}, Int64, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}})
precompile(Tuple{GeometryExperiments.Patch{GeometryExperiments.BezierCurve{GeometryExperiments.Horner}}, Float64, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}})
precompile(Tuple{typeof(Base.split), Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}, GeometryExperiments.Patch{GeometryExperiments.BezierCurve{GeometryExperiments.Horner}}})
precompile(Tuple{typeof(GeometryExperiments.curve_points), GeometryExperiments.Patch{GeometryExperiments.BezierCurve{GeometryExperiments.Horner}}, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}})
precompile(Tuple{typeof(GeometryExperiments.curve_points), GeometryExperiments.Patch{GeometryExperiments.BezierCurve{GeometryExperiments.Horner}}, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}, Int64})
precompile(Tuple{Type{GeometryExperiments.GranularVector{Int64, V} where V<:AbstractArray{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(Base.isempty), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(GeometryExperiments.nextind!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(Base.push!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.getproperty), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Symbol})
precompile(Tuple{typeof(Base.length), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(Base.collect), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(Base.deleteat!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Int64})
precompile(Tuple{typeof(Base.push!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Int64})
precompile(Tuple{typeof(Base.eachindex), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(Base.collect), Base.Iterators.Filter{GeometryExperiments.var"#25#26"{GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}}, Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.empty!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(Base.append!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.setindex!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Int64, Int64})
precompile(Tuple{typeof(GeometryExperiments.sprintc_mime), Function, GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{GeometryExperiments.var"#2#3"{Base.Pairs{Symbol, Union{}, Tuple{}, NamedTuple{(), Tuple{}}}, typeof(Base.show)}, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Vararg{Any}})
precompile(Tuple{typeof(Base.show), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, Base.Multimedia.MIME{Symbol("text/plain")}, GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}})
precompile(Tuple{typeof(Base.view), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.getindex), GeometryExperiments.GranularVectorView{GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Array{Int64, 1}}, Int64})
precompile(Tuple{typeof(Base.collect), GeometryExperiments.GranularVectorView{GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.setindex!), GeometryExperiments.GranularVectorView{GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Array{Int64, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.getindex), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Int64})
precompile(Tuple{Type{GeometryExperiments.GranularVector{T, V} where V<:AbstractArray{Union{Nothing, T}, 1} where T}, Array{Int64, 1}})
precompile(Tuple{typeof(Base.insert!), GeometryExperiments.GranularVector{Int64, Array{Union{Nothing, Int64}, 1}}, Int64, Int64})
precompile(Tuple{Type{GeometryExperiments.MeshStatistics}, GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{Type{GeometryExperiments.MeshStatistics}, Int64, Int64, Int64})
precompile(Tuple{typeof(Base.:(==)), GeometryExperiments.MeshStatistics, GeometryExperiments.MeshStatistics})
precompile(Tuple{typeof(GeometryExperiments.faces), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.first), GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}})
precompile(Tuple{typeof(GeometryExperiments.centroid), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshFace})
precompile(Tuple{typeof(GeometryExperiments.centroid), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.edges), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.first), GeometryExperiments.GranularVector{GeometryExperiments.MeshEdge, Array{Union{Nothing, GeometryExperiments.MeshEdge}, 1}}})
precompile(Tuple{typeof(GeometryExperiments.centroid), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshEdge})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Vararg{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}}})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, StaticArraysCore.SArray{Tuple{2}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1, 2}})
precompile(Tuple{typeof(GeometryExperiments.orientation), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshFace})
precompile(Tuple{typeof(GeometryExperiments.orientation), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.:(==)), GeometryExperiments.FaceOrientation, GeometryExperiments.FaceOrientation})
precompile(Tuple{typeof(GeometryExperiments.rem_face!), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshFace})
precompile(Tuple{typeof(GeometryExperiments.rem_edges!), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.vertices), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.rem_vertices!), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.getproperty), GeometryExperiments.MeshVertex, Symbol})
precompile(Tuple{typeof(Base.in), GeometryExperiments.MeshVertex, GeometryExperiments.GranularVector{GeometryExperiments.MeshVertex, Array{Union{Nothing, GeometryExperiments.MeshVertex}, 1}}})
precompile(Tuple{typeof(Base.getproperty), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, Symbol})
precompile(Tuple{typeof(Base.length), GeometryExperiments.GranularVector{GeometryExperiments.MeshVertex, Array{Union{Nothing, GeometryExperiments.MeshVertex}, 1}}})
precompile(Tuple{typeof(Base.length), GeometryExperiments.GranularVector{GeometryExperiments.MeshEdge, Array{Union{Nothing, GeometryExperiments.MeshEdge}, 1}}})
precompile(Tuple{typeof(Base.length), GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}})
precompile(Tuple{typeof(GeometryExperiments.centroid), Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}})
precompile(Tuple{Type{GeometryExperiments.MeshDiff{VT, ET, FT} where FT where ET where VT}, GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.rem_vertices!), GeometryExperiments.MeshDiff{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.rem_edges!), GeometryExperiments.MeshDiff{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.rem_faces!), GeometryExperiments.MeshDiff{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.apply!), GeometryExperiments.MeshDiff{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(GeometryExperiments.add_vertex!), GeometryExperiments.MeshDiff{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}})
precompile(Tuple{typeof(GeometryExperiments.add_edge!), GeometryExperiments.MeshDiff{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshVertex, GeometryExperiments.MeshVertex})
precompile(Tuple{typeof(Base.vect), GeometryExperiments.MeshEdge, Vararg{GeometryExperiments.MeshEdge}})
precompile(Tuple{typeof(GeometryExperiments.add_face!), GeometryExperiments.MeshDiff{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, Array{GeometryExperiments.MeshEdge, 1}})
precompile(Tuple{typeof(Base.getproperty), GeometryExperiments.MeshStatistics, Symbol})
precompile(Tuple{typeof(Base.indexed_iterate), GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), GeometryExperiments.GranularVector{GeometryExperiments.MeshEdge, Array{Union{Nothing, GeometryExperiments.MeshEdge}, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), GeometryExperiments.GranularVector{GeometryExperiments.MeshEdge, Array{Union{Nothing, GeometryExperiments.MeshEdge}, 1}}, Int64, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), GeometryExperiments.GranularVector{GeometryExperiments.MeshVertex, Array{Union{Nothing, GeometryExperiments.MeshVertex}, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), GeometryExperiments.GranularVector{GeometryExperiments.MeshVertex, Array{Union{Nothing, GeometryExperiments.MeshVertex}, 1}}, Int64, Int64})
precompile(Tuple{typeof(GeometryExperiments.edges), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshFace})
precompile(Tuple{typeof(Base.collect), GeometryExperiments.GranularVectorView{GeometryExperiments.GranularVector{GeometryExperiments.MeshEdge, Array{Union{Nothing, GeometryExperiments.MeshEdge}, 1}}, Array{Int64, 1}}})
precompile(Tuple{typeof(Base.:(==)), Array{GeometryExperiments.MeshEdge, 1}, Array{GeometryExperiments.MeshEdge, 1}})
precompile(Tuple{typeof(GeometryExperiments.vertices), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshEdge})
precompile(Tuple{typeof(Base.:(==)), Tuple{GeometryExperiments.MeshVertex, GeometryExperiments.MeshVertex}, Tuple{GeometryExperiments.MeshVertex, GeometryExperiments.MeshVertex}})
precompile(Tuple{typeof(Base.vect), GeometryExperiments.MeshVertex, Vararg{GeometryExperiments.MeshVertex}})
precompile(Tuple{typeof(Base.:(==)), Array{GeometryExperiments.MeshVertex, 1}, Array{GeometryExperiments.MeshVertex, 1}})
precompile(Tuple{typeof(GeometryExperiments.adjacent_vertices), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshVertex})
precompile(Tuple{typeof(GeometryExperiments.adjacent_faces), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshFace})
precompile(Tuple{typeof(Base.vect), GeometryExperiments.MeshFace})
precompile(Tuple{typeof(Base.:(==)), Array{GeometryExperiments.MeshFace, 1}, Array{GeometryExperiments.MeshFace, 1}})
precompile(Tuple{typeof(GeometryExperiments.ishomogeneous), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.allunique), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.Iterators.only), GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}})
precompile(Tuple{typeof(GeometryExperiments.edge_cycle), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.MeshFace})
precompile(Tuple{typeof(Base.collect), GeometryExperiments.EdgeIterator{GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}}})
precompile(Tuple{typeof(Base.Broadcast.broadcasted), typeof(Base.getproperty), Array{GeometryExperiments.TraversedEdge, 1}, Symbol})
precompile(Tuple{typeof(Base.Broadcast.materialize), Base.Broadcast.Broadcasted{Base.Broadcast.DefaultArrayStyle{1}, Nothing, typeof(Base.getproperty), Tuple{Array{GeometryExperiments.TraversedEdge, 1}, Base.RefValue{Symbol}}}})
precompile(Tuple{typeof(Base.setindex!), Array{GeometryExperiments.MeshEdge, 1}, GeometryExperiments.MeshEdge, Int64})
precompile(Tuple{typeof(Base.setindex!), Array{GeometryExperiments.MeshVertex, 1}, GeometryExperiments.MeshVertex, Int64})
precompile(Tuple{typeof(Base.union), Array{GeometryExperiments.MeshVertex, 1}, Array{GeometryExperiments.MeshVertex, 1}})
precompile(Tuple{Type{GeometryExperiments.UniformSubdivision}, Int64})
precompile(Tuple{typeof(Base.getproperty), Base.MappingRF{GeometryExperiments.var"#61#62", Base.BottomRF{typeof(Base.add_sum)}}, Symbol})
precompile(Tuple{typeof(Base.getproperty), GeometryExperiments.UniformSubdivision, Symbol})
precompile(Tuple{typeof(GeometryExperiments.subdivide!), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Base.Generator{Array{GeometryExperiments.MeshVertex, 1}, GeometryExperiments.var"#59#60"{GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}}}, NTuple{4, Float64}}}, Int64})
precompile(Tuple{typeof(GeometryExperiments.linear_combination), Base.Generator{Array{GeometryExperiments.MeshVertex, 1}, GeometryExperiments.var"#59#60"{GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}}}, NTuple{4, Float64}})
precompile(Tuple{typeof(Base.all), Function, GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}})
precompile(Tuple{typeof(Base._all), typeof(GeometryExperiments.isquad), GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}, Base.Colon})
precompile(Tuple{typeof(Base.collect), GeometryExperiments.GranularVector{GeometryExperiments.MeshEdge, Array{Union{Nothing, GeometryExperiments.MeshEdge}, 1}}})
precompile(Tuple{typeof(Base.length), Array{GeometryExperiments.MeshEdge, 1}})
precompile(Tuple{Type{GeometryExperiments.MeshStatistics}, Float64, Int64, Int64})
precompile(Tuple{typeof(GeometryExperiments.subdivide!), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, GeometryExperiments.UniformSubdivision})
precompile(Tuple{typeof(Base.isnothing), GeometryExperiments.FaceOrientation})
precompile(Tuple{typeof(GeometryExperiments.subdivide!), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}, Int64})
precompile(Tuple{Base.Iterators.var"#7#8"{Tuple{Base.Generator{Array{GeometryExperiments.MeshVertex, 1}, GeometryExperiments.var"#59#60"{GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}}}, Tuple{Float64, Float64, Float64}}}, Int64})
precompile(Tuple{typeof(GeometryExperiments.linear_combination), Base.Generator{Array{GeometryExperiments.MeshVertex, 1}, GeometryExperiments.var"#59#60"{GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}}}, Tuple{Float64, Float64, Float64}})
precompile(Tuple{typeof(GeometryExperiments.triangulate!), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base._all), typeof(GeometryExperiments.istri), GeometryExperiments.GranularVector{GeometryExperiments.MeshFace, Array{Union{Nothing, GeometryExperiments.MeshFace}, 1}}, Base.Colon})
precompile(Tuple{typeof(GeometryExperiments.nonorientable_faces), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.isempty), Array{GeometryExperiments.MeshFace, 1}})
precompile(Tuple{typeof(GeometryExperiments.face_orientations), GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.unique), Dictionaries.Dictionary{GeometryExperiments.MeshFace, Union{Nothing, GeometryExperiments.FaceOrientation}}})
precompile(Tuple{typeof(Base.length), Dictionaries.Indices{Union{Nothing, GeometryExperiments.FaceOrientation}}})
precompile(Tuple{Type{GeometryExperiments.Strip{GeometryExperiments.TrianglePrimitive, I} where I}, Base.UnitRange{Int64}})
precompile(Tuple{Type{GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, T} where T}, Array{Tuple{Int64, Int64, Int64}, 1}})
precompile(Tuple{Type{GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, T} where T}, GeometryExperiments.Strip{GeometryExperiments.TrianglePrimitive, Base.UnitRange{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryExperiments.var"#51#52"{DataType, Base.UnitRange{Int64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#51#52"{DataType, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base._similar_for), Base.UnitRange{Int64}, Type{StaticArraysCore.SArray{Tuple{3}, Int64, 1, 3}}, Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#51#52"{DataType, Base.UnitRange{Int64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{StaticArraysCore.SArray{Tuple{3}, Int64, 1, 3}, 1}, StaticArraysCore.SArray{Tuple{3}, Int64, 1, 3}, Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#51#52"{DataType, Base.UnitRange{Int64}}}, Int64})
precompile(Tuple{Type{GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, T} where T}, Array{StaticArraysCore.SArray{Tuple{3}, Int64, 1, 3}, 1}})
precompile(Tuple{typeof(Base.:(==)), GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, Int64}, GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, Int64}})
precompile(Tuple{Type{GeometryExperiments.Fan{GeometryExperiments.TrianglePrimitive, I} where I}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(GeometryExperiments.primitive_topology), Type{GeometryExperiments.Fan{GeometryExperiments.TrianglePrimitive, Base.UnitRange{Int64}}}})
precompile(Tuple{Type{GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, T} where T}, GeometryExperiments.Fan{GeometryExperiments.TrianglePrimitive, Base.UnitRange{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryExperiments.var"#49#50"{DataType, Int64, Base.UnitRange{Int64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.collect_similar), Base.UnitRange{Int64}, Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#49#50"{DataType, Int64, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base._similar_for), Base.UnitRange{Int64}, Type{StaticArraysCore.SArray{Tuple{3}, Int64, 1, 3}}, Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#49#50"{DataType, Int64, Base.UnitRange{Int64}}}, Base.HasShape{1}, Tuple{Base.OneTo{Int64}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{StaticArraysCore.SArray{Tuple{3}, Int64, 1, 3}, 1}, StaticArraysCore.SArray{Tuple{3}, Int64, 1, 3}, Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#49#50"{DataType, Int64, Base.UnitRange{Int64}}}, Int64})
precompile(Tuple{Type{GeometryExperiments.VertexMesh{I, T, V} where V<:AbstractArray{T, 1} where T where I<:GeometryExperiments.IndexEncoding}, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}, Type{GeometryExperiments.TrianglePrimitive}})
precompile(Tuple{Type{GeometryExperiments.VertexMesh{I, T, V} where V<:AbstractArray{T, 1} where T where I<:GeometryExperiments.IndexEncoding}, GeometryExperiments.Fan{GeometryExperiments.TrianglePrimitive, Base.UnitRange{Int64}}, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}})
precompile(Tuple{Type{GeometryExperiments.Strip{GeometryExperiments.LinePrimitive, I} where I}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(GeometryExperiments.primitive_topology), Type{GeometryExperiments.Strip{GeometryExperiments.LinePrimitive, Base.UnitRange{Int64}}}})
precompile(Tuple{Type{GeometryExperiments.IndexList{GeometryExperiments.LinePrimitive, 2, T} where T}, GeometryExperiments.Strip{GeometryExperiments.LinePrimitive, Base.UnitRange{Int64}}})
precompile(Tuple{Type{Base.Generator{I, F} where F where I}, GeometryExperiments.var"#53#54"{DataType, Base.UnitRange{Int64}}, Base.UnitRange{Int64}})
precompile(Tuple{typeof(Base.collect), Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#53#54"{DataType, Base.UnitRange{Int64}}}})
precompile(Tuple{typeof(Base.collect_to_with_first!), Array{StaticArraysCore.SArray{Tuple{2}, Int64, 1, 2}, 1}, StaticArraysCore.SArray{Tuple{2}, Int64, 1, 2}, Base.Generator{Base.UnitRange{Int64}, GeometryExperiments.var"#53#54"{DataType, Base.UnitRange{Int64}}}, Int64})
precompile(Tuple{Type{GeometryExperiments.IndexList{GeometryExperiments.LinePrimitive, 2, T} where T}, Array{StaticArraysCore.SArray{Tuple{2}, Int64, 1, 2}, 1}})
precompile(Tuple{Type{GeometryExperiments.IndexList{GeometryExperiments.LinePrimitive, 2, T} where T}, Array{Tuple{Int64, Int64}, 1}})
precompile(Tuple{typeof(Base.:(==)), GeometryExperiments.IndexList{GeometryExperiments.LinePrimitive, 2, Int64}, GeometryExperiments.IndexList{GeometryExperiments.LinePrimitive, 2, Int64}})
precompile(Tuple{Type{GeometryExperiments.VertexMesh{I, T, V} where V<:AbstractArray{T, 1} where T where I<:GeometryExperiments.IndexEncoding}, GeometryExperiments.Mesh{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Nothing, Nothing}})
precompile(Tuple{typeof(Base.getproperty), GeometryExperiments.VertexMesh{GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, Int64}, StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, Array{StaticArraysCore.SArray{Tuple{2}, Float64, 1, 2}, 1}}, Symbol})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, StaticArraysCore.SArray{Tuple{4}, StaticArraysCore.SArray{Tuple{2}, Float32, 1, 2}, 1, 4}})
precompile(Tuple{Type{GeometryExperiments.PointSet{Dim, T, V} where V<:AbstractArray{StaticArraysCore.SArray{Tuple{Dim}, T, 1, Dim}, 1} where T where Dim}, Type{GeometryExperiments.NormedPrimitive{inf, 2}}, Type{StaticArraysCore.SArray{Tuple{2}, Float32, 1, 2}}})
precompile(Tuple{Type{GeometryExperiments.TriangleMesh{I, VT, L, V} where V<:AbstractArray{GeometryExperiments.Vertex{L, VT}, 1} where L where VT where I}, GeometryExperiments.Strip{GeometryExperiments.TrianglePrimitive, Base.UnitRange{Int64}}, GeometryExperiments.PointSet{2, Float32, StaticArraysCore.SArray{Tuple{4}, StaticArraysCore.SArray{Tuple{2}, Float32, 1, 2}, 1, 4}}})
precompile(Tuple{Type{GeometryExperiments.TriangleMesh{I, VT, L, V} where V<:AbstractArray{GeometryExperiments.Vertex{L, VT}, 1} where L where VT where I}, GeometryExperiments.IndexList{GeometryExperiments.TrianglePrimitive, 3, Int64}, StaticArraysCore.SArray{Tuple{4}, GeometryExperiments.Vertex{StaticArraysCore.SArray{Tuple{2}, Float32, 1, 2}, Nothing}, 1, 4}})
precompile(Tuple{typeof(GeometryExperiments.vertices), GeometryExperiments.TriangleMesh{Int64, Nothing, StaticArraysCore.SArray{Tuple{2}, Float32, 1, 2}, StaticArraysCore.SArray{Tuple{4}, GeometryExperiments.Vertex{StaticArraysCore.SArray{Tuple{2}, Float32, 1, 2}, Nothing}, 1, 4}}})
precompile(Tuple{typeof(Base.length), StaticArraysCore.SArray{Tuple{4}, GeometryExperiments.Vertex{StaticArraysCore.SArray{Tuple{2}, Float32, 1, 2}, Nothing}, 1, 4}})
precompile(Tuple{Type{GeometryExperiments.Line{D, T, N} where N where T where D}, SymbolicGA.KVector{2, Float64, 3, 3}})
precompile(Tuple{typeof(Base.intersect), GeometryExperiments.Line{3, Float64, 3}, GeometryExperiments.Line{3, Float64, 3}})
precompile(Tuple{Type{GeometryExperiments.Line{D, T, N} where N where T where D}, SymbolicGA.KVector{2, Float64, 4, 6}})
precompile(Tuple{Type{GeometryExperiments.Plane{D, T, N} where N where T where D}, SymbolicGA.KVector{3, Float64, 4, 4}})
precompile(Tuple{typeof(Base.intersect), GeometryExperiments.Line{4, Float64, 6}, GeometryExperiments.Plane{4, Float64, 4}})
precompile(Tuple{typeof(Base.intersect), GeometryExperiments.Plane{4, Float64, 4}, GeometryExperiments.Line{4, Float64, 6}})
precompile(Tuple{typeof(Base.intersect), GeometryExperiments.Plane{4, Float64, 4}, GeometryExperiments.Plane{4, Float64, 4}})
precompile(Tuple{typeof(Base.getindex), GeometryExperiments.Line{4, Float64, 6}})
precompile(Tuple{Type{GeometryExperiments.PinholeCamera{O, P} where P<:(SymbolicGA.KVector{3, T, D, N} where N where D where T) where O<:(SymbolicGA.KVector{1, T, D, N} where N where D where T)}, Vararg{StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}, 4}})
precompile(Tuple{GeometryExperiments.PinholeCamera{SymbolicGA.KVector{1, Float64, 4, 4}, SymbolicGA.KVector{3, Float64, 4, 4}}, StaticArraysCore.SArray{Tuple{3}, Float64, 1, 3}})
